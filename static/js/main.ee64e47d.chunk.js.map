{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","appointment","options","map","item","value","name","required","AppointmentForm","submit","onSubmit","type","placeholder","title","date","min","Date","toLocaleDateString","split","day","month","year","padStart","getTodayString","time","Tile","entry","result","Object","entries","index","className","TileList","tiles","array","AppointmentsPage","appointments","addAppointment","useState","setAppointment","e","preventDefault","target","ContactForm","contact","isDuplicate","pattern","phone","email","ContactsPage","addContact","setContact","duplicate","setDuplicate","useEffect","some","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"gNAEaA,EAAgB,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAE3CC,EAAUH,EAASI,KAAK,SAAAC,GAC5B,OAAO,wBAAwBC,MAAOD,EAAKE,KAApC,SAA2CF,EAAKE,MAAnCF,EAAKE,SAG3B,OACE,yBAAQA,KAAK,OAAON,SAAUA,EAAUK,MAAOJ,EAAYK,KAAMC,UAAQ,EAAzE,UACE,wBAAQF,MAAM,GAAd,kCACCH,MCRMM,EAAkB,SAAC,GAKzB,IAJLP,EAII,EAJJA,YACAQ,EAGI,EAHJA,OACAT,EAEI,EAFJA,SACAD,EACI,EADJA,SAUA,OACE,uBAAMW,SAAUD,EAAhB,UACE,uBAAOE,KAAK,OAAOL,KAAK,QAAQM,YAAY,QAAQP,MAAOJ,EAAYY,MAAOb,SAAUA,EAAUO,UAAQ,IAC1G,uBAAOI,KAAK,OAAOL,KAAK,OAAOD,MAAOJ,EAAYa,KAAMd,SAAUA,EAAUe,IAVzD,WAAO,IAAD,GACA,IAAIC,MAC5BC,mBAAmB,SACnBC,MAAM,KAHkB,mBACpBC,EADoB,KACfC,EADe,KACRC,EADQ,KAI3B,MAAM,GAAN,OAAUA,EAAV,YAAkBD,EAAME,SAAS,EAAG,KAApC,YAA4CH,EAAIG,SAAS,EAAG,MAMuBC,GAAkBhB,UAAQ,IAC3G,uBAAOI,KAAK,OAAOL,KAAK,OAAOD,MAAOJ,EAAYuB,KAAMxB,SAAUA,EAAWO,UAAQ,IACrF,cAAC,EAAD,CAAeR,SAAUA,EAAUC,SAAUA,EAAUC,YAAaA,IACpE,uBAAOU,KAAK,SAASN,MAAM,eCrBpBoB,EAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEdC,EAASC,OAAOC,QAAQH,GAAOvB,KAAK,SAACC,EAAM0B,GAC/C,OAAO,mBAAGC,UAAqB,IAAVD,EAAc,aAAe,QAA3C,SAAmE1B,EAAK,IAAfA,EAAK,OAGvE,OACE,qBAAK2B,UAAU,iBAAf,SACGJ,KCPMK,EAAW,SAAC,GAAa,IAC9BC,EAD6B,EAAXC,MACJ/B,KAAK,SAACC,EAAM0B,GAC9B,OAAO,cAAC,EAAD,CAAMJ,MAAOtB,GAAWA,EAAKE,KAAO,IAAMwB,MAEnD,OACE,qBAAKC,UAAU,kBAAf,SACGE,KCLME,EAAmB,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,aAAcrC,EAA8B,EAA9BA,SAAUsC,EAAoB,EAApBA,eAAoB,EAMtCC,mBAAS,CAC7CzB,MAAO,GACPP,KAAM,GACNQ,KAAM,GACNU,KAAM,KAVoE,mBAMrEvB,EANqE,KAMxDsC,EANwD,KA6B5E,OACE,gCACE,oCACE,iDACA,cAAC,EAAD,CAAiBtC,YAAaA,EAAasC,eAAgBA,EAAgB9B,OApB5D,SAAC+B,GACpBA,EAAEC,iBACFJ,EAAepC,GACfsC,EAAe,CACb1B,MAAO,GACPP,KAAM,GACNQ,KAAM,GACNU,KAAM,MAa6FxB,SARlF,SAAC,GAAc,IAAb0C,EAAY,EAAZA,OACrBH,EAAe,2BAAItC,GAAL,kBAAmByC,EAAOpC,KAAOoC,EAAOrC,UAOuEN,SAAUA,OAErI,uBACA,oCACE,8CACA,cAAC,EAAD,CAAUmC,MAAOE,WCxCZO,EAAc,SAAC,GAKrB,IAJLC,EAII,EAJJA,QACAnC,EAGI,EAHJA,OACAT,EAEI,EAFJA,SACA6C,EACI,EADJA,YAEA,OACE,uBAAMnC,SAAUD,EAAhB,UACE,uBAAOF,UAAQ,EAACD,KAAK,OAAOM,YAAY,OAAOD,KAAK,OAAON,MAAOuC,EAAQtC,KAAMN,SAAUA,IACzF6C,GAAe,sEAChB,uBAAOtC,UAAQ,EAACD,KAAK,QAAQM,YAAY,oBAAoBD,KAAK,MAAMmC,QAAQ,6BAA6BzC,MAAOuC,EAAQG,MAAO/C,SAAUA,IAC7I,uBAAOO,UAAQ,EAACD,KAAK,QAAQM,YAAY,QAAQD,KAAK,QAAQN,MAAOuC,EAAQI,MAAOhD,SAAUA,IAC9F,uBAAOW,KAAK,SAASN,MAAM,eCTpB4C,EAAe,SAAC,GAA4B,IAA3BlD,EAA0B,EAA1BA,SAAUmD,EAAgB,EAAhBA,WAAgB,EAMxBZ,mBAAS,CACrChC,KAAM,GACNyC,MAAO,GACPC,MAAO,KAT6C,mBAM/CJ,EAN+C,KAMtCO,EANsC,OAYpBb,oBAAS,GAZW,mBAY/Cc,EAZ+C,KAYpCC,EAZoC,KA4CtD,OALAC,qBAAU,WACR,IAAMT,EAAc9C,EAASwD,MAAM,SAAA7B,GAAK,OAAIA,EAAMpB,OAASsC,EAAQtC,QACnE+C,EAAaR,KACZ,CAACD,IAGF,gCACE,oCACE,6CACA,cAAC,EAAD,CAAaA,QAASA,EAASO,WAAYA,EAAY1C,OAlCxC,SAAC+B,GACpBA,EAAEC,iBAKCW,IACHF,EAAWN,GACXO,EAAW,CACT7C,KAAM,GACNyC,MAAO,GACPC,MAAO,OAuBwEhD,SAlB9D,SAAC,GAAc,IAAb0C,EAAY,EAAZA,OACrBS,EAAW,2BAAIP,GAAL,kBAAeF,EAAOpC,KAAOoC,EAAOrC,UAiB2DwC,YAAaO,OAEpH,uBACA,oCACE,0CACA,cAAC,EAAD,CAAUlB,MAAOnC,WCiBVyD,MArEf,WAME,IANa,EAYmBlB,mBAAS,CANrB,CAClBhC,KAAM,QACNyC,MAAO,YACPC,MAAO,mBATI,mBAYNjD,EAZM,KAYI0D,EAZJ,OAa2BnB,mBAAS,IAbpC,mBAaNF,EAbM,KAaQsB,EAbR,KAePC,EACM,YADNA,EAEU,gBAgBhB,OACE,qCACE,gCACE,cAAC,IAAD,CAASC,GAAID,EAAiBE,gBAAgB,SAA9C,sBAGA,cAAC,IAAD,CAASD,GAAID,EAAqBE,gBAAgB,SAAlD,6BAIF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUH,GAAID,MAEhB,cAAC,IAAD,CAAOI,KAAMJ,EAAb,SAEE,cAAC,EAAD,CACE5D,SAAUA,EACVmD,WA3BO,SAACN,GAClBa,EAAY,GAAD,mBAAK1D,GAAL,CAAe6C,UA6BpB,cAAC,IAAD,CAAOmB,KAAMJ,EAAb,SAEE,cAAC,EAAD,CACEvB,aAAcA,EACdC,eA9BW,SAACpC,GACtByD,EAAgB,GAAD,mBAAKtB,GAAL,CAAmBnC,MA8BxBF,SAAUA,eC5DxBiE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee64e47d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, onChange, appointment}) => {\r\n\r\n  const options = contacts.map( item => {\r\n    return <option key={item.name} value={item.name}>{item.name}</option>\r\n  } )\r\n\r\n  return (\r\n    <select name=\"name\" onChange={onChange} value={appointment.name} required>\r\n      <option value=\"\">-- select contact --</option>\r\n      {options}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  appointment,\r\n  submit,\r\n  onChange,\r\n  contacts\r\n}) => {\r\n  \r\n  const getTodayString = () => {\r\n    const [day, month, year] = new Date()\r\n      .toLocaleDateString(\"pl-PL\")\r\n      .split(\".\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <input type=\"text\" name=\"title\" placeholder=\"Title\" value={appointment.title} onChange={onChange} required/>\r\n      <input type=\"date\" name=\"date\" value={appointment.date} onChange={onChange} min={getTodayString()} required/>\r\n      <input type=\"time\" name=\"time\" value={appointment.time} onChange={onChange}  required/>\r\n      <ContactPicker contacts={contacts} onChange={onChange} appointment={appointment}/>\r\n      <input type=\"submit\" value=\"Submit\"/>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({entry}) => {\r\n  \r\n  const result = Object.entries(entry).map( (item, index) => {\r\n    return <p className={index === 0 ? 'tile-title' : 'title'} key={item[0]}>{item[1]}</p>\r\n  })\r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {result}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from '../tile/Tile';\r\n\r\nexport const TileList = ({array}) => {\r\n  const tiles = array.map( (item, index) => {\r\n    return <Tile entry={item} key={item.name + '_' + index}/>\r\n  })\r\n  return (\r\n    <div className=\"tiles-container\">\r\n      {tiles}\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { AppointmentForm } from '../../components/appointmentForm/AppointmentForm';\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({appointments, contacts, addAppointment}) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n\r\n  const [appointment, setAppointment] = useState({\r\n    title: '',\r\n    name: '',\r\n    date: '',\r\n    time: ''\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addAppointment(appointment);\r\n    setAppointment({\r\n      title: '',\r\n      name: '',\r\n      date: '',\r\n      time: ''\r\n    })\r\n\r\n  };\r\n\r\n  const handleChange = ({target}) => {\r\n    setAppointment({...appointment, [target.name]: target.value})\r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm appointment={appointment} setAppointment={setAppointment} submit={handleSubmit} onChange={handleChange} contacts={contacts}/>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList array={appointments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  contact,\r\n  submit,\r\n  onChange,\r\n  isDuplicate\r\n}) => {\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <input required name=\"name\" placeholder=\"Name\" type=\"text\" value={contact.name} onChange={onChange}/>\r\n      {isDuplicate && <p>Contact with this name already exists</p> }\r\n      <input required name=\"phone\" placeholder=\"Phone ###-###-###\" type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{3}\" value={contact.phone} onChange={onChange}/>\r\n      <input required name=\"email\" placeholder=\"Email\" type=\"email\" value={contact.email} onChange={onChange} />\r\n      <input type=\"submit\" value=\"Submit\"/>\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: ''\r\n  })\r\n\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   if(!duplicate){\r\n    addContact(contact);\r\n    setContact({\r\n      name: '',\r\n      phone: '',\r\n      email: ''\r\n    })\r\n   }\r\n  };\r\n\r\n  const handleChange = ({target}) => {\r\n    setContact({...contact, [target.name]: target.value})\r\n  } \r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  useEffect(() => {\r\n    const isDuplicate = contacts.some( entry => entry.name === contact.name);\r\n    setDuplicate(isDuplicate);\r\n  }, [contact]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm contact={contact} setContact={setContact} submit={handleSubmit} onChange={handleChange} isDuplicate={duplicate}/>        \r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList array={contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  const testContact = {\r\n    name: 'Sasha',\r\n    phone: '123456789',\r\n    email: 'mail@test.com'\r\n  }\r\n\r\n  const [contacts, setContacts] = useState([testContact]); \r\n  const [appointments, setAppointments] = useState([]); \r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const addContact = (contact) => {\r\n    setContacts([...contacts, contact])\r\n  }\r\n\r\n  const addAppointment = (appointment) => {\r\n    setAppointments([...appointments, appointment])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage \r\n              contacts={contacts} \r\n              addContact={addContact}\r\n            />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage \r\n              appointments={appointments} \r\n              addAppointment={addAppointment}\r\n              contacts={contacts} \r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}